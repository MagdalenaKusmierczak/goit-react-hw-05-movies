{"version":3,"file":"static/js/4.4ce6f6f9.chunk.js","mappings":"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","sources":["Service/API/Api.jsx","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3747076c06d2013e08cb76571efc36db';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n//Trending movies list\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n//Search movies list\nexport const getSearchMovies = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\n// Get movie details\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\n//Get movie cast\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n//Get movie reviews\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\nexport const CastMember = styled.li``;\nexport const MemberName = styled.h3``;\nexport const MemberImage = styled.img``;\nexport const MemberCharacter = styled.p``;\n","import PropTypes from 'prop-types';\nimport {\n  List,\n  CastMember,\n  MemberName,\n  MemberImage,\n  MemberCharacter,\n} from './CastList.styled';\nimport small from 'Service/Placeholders/small.jpg';\n\nconst CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(member => (\n        <CastMember key={member.id}>\n          <MemberImage\n            src={\n              member.profile_path\n                ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2${member.profile_path}`\n                : `${small}`\n            }\n            alt={member.original_name}\n          />\n          <MemberName>{member.name}</MemberName>\n          <MemberCharacter>Character: {member.character}</MemberCharacter>\n        </CastMember>\n      ))}\n    </List>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      original_name: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\nexport default CastList;\n","import styled from 'styled-components';\n\nexport const Warning = styled.div``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'Service/API/Api';\nimport CastList from 'components/CastList/CastList';\nimport { Warning } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const cast = await getMovieCast(movieId);\n        setCastList(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {castList.length !== 0 && <CastList cast={castList} />}\n      {castList.length === 0 && (\n        <Warning>We don't have any cast for this movie.</Warning>\n      )}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["axios","params","api_key","language","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","getSearchMovies","_ref2","_callee2","movieName","_context2","concat","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCast","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","CastMember","_templateObject2","MemberName","_templateObject3","MemberImage","_templateObject4","MemberCharacter","_templateObject5","_jsx","children","map","member","_jsxs","src","profile_path","small","alt","original_name","name","character","id","Warning","useParams","_useState","useState","_useState2","_slicedToArray","castList","setCastList","useEffect","fetchData","t0","console","log","_Fragment","length","CastList"],"sourceRoot":""}